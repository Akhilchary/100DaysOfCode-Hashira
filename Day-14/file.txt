program 1:
https://leetcode.com/problems/distinct-subsequences/

class Solution {
public:
    int rec(int i,int j,string s,string t,vector<vector<int>> &dp)
    {
        //base case
        if(i==-1)
        {
            if(j==-1) return 1;
            else return 0;
        }
        if(j==-1) return 1;
        if(dp[i][j]!=-1) return dp[i][j];
        if(s[i]==t[j])
        {
            return dp[i][j]= rec(i-1,j-1,s,t,dp)+rec(i-1,j,s,t,dp);
        }
        else return dp[i][j]= rec(i-1,j,s,t,dp);
             
    }
    int numDistinct(string s, string t) {
        int n=s.size(),m=t.size();
        int mod=1e9+7;
        vector<vector<int>> dp(n+1,vector<int>(m+1,0));
        dp[0][0]=1;
        for(int i=0;i<=n;i++) dp[i][0]=1;
        
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(s[i-1]==t[j-1])
                {
                    dp[i][j]=(dp[i-1][j-1]+dp[i-1][j])%mod;
                }
                else dp[i][j]=dp[i-1][j];
            }
        }
        return dp[n][m];
    }
};

